{"ast":null,"code":"import React,{useRef,useEffect,useState}from'react';import mapboxgl from'mapbox-gl';import{MapboxLayer}from'@deck.gl/mapbox';import{Tile3DLayer}from'@deck.gl/geo-layers';import{Tiles3DLoader}from'@loaders.gl/3d-tiles';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";mapboxgl.accessToken='pk.eyJ1IjoiaW4ydHdhbiIsImEiOiJja3l6bjJ0ZWIwY2d0Mm5yemZ3NWFmOWhjIn0._B39LsH99PmOk74938_tUg';const tileChiyoda='https://s3-ap-northeast-1.amazonaws.com/3dimension.jp/13000_tokyo-egm96/13101_chiyoda-ku_notexture/tileset.json';export default function App(){const mapContainer=useRef(null);const map=useRef(null);const[lat,setLat]=useState(35.68836671417561);const[lng,setLng]=useState(139.75643914212702);const[zoom,setZoom]=useState(14);const tile3dLayer=new MapboxLayer({id:'tile3dlayer',type:Tile3DLayer,pointSize:1,data:tileChiyoda,opacity:0.9,pickable:true,loader:Tiles3DLoader,onTileLoad:tileHeader=>tileHeader.content.cartographicOrigin.z-=40,onHover:(Tile3DLayer,event)=>console.log('Hovered:',Tile3DLayer,event)});const nav=new mapboxgl.NavigationControl();useEffect(()=>{if(map.current)return;// initialize map only once\nmap.current=new mapboxgl.Map({container:mapContainer.current,style:'mapbox://styles/in2twan/ckyzn794b000t14s81978v83n',center:[lng,lat],zoom:zoom});});useEffect(()=>{if(!map.current)return;// wait for map to initialize\nmap.current.on('move',()=>{setLng(map.current.getCenter().lng.toFixed(4));setLat(map.current.getCenter().lat.toFixed(4));setZoom(map.current.getZoom().toFixed(2));});});useEffect(()=>{map.current.on('load',()=>{map.current.addLayer(tile3dLayer);map.current.addControl(nav,'bottom-right');});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[\"Longitude: \",lng,\" | Latitude: \",lat,\" | Zoom: \",zoom]}),/*#__PURE__*/_jsx(\"div\",{ref:mapContainer,className:\"map-container\"})]});};","map":{"version":3,"sources":["/Users/in2/Documents/GitHub/use-mapbox-gl-js-with-react/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","MapboxLayer","Tile3DLayer","Tiles3DLoader","accessToken","tileChiyoda","App","mapContainer","map","lat","setLat","lng","setLng","zoom","setZoom","tile3dLayer","id","type","pointSize","data","opacity","pickable","loader","onTileLoad","tileHeader","content","cartographicOrigin","z","onHover","event","console","log","nav","NavigationControl","current","Map","container","style","center","on","getCenter","toFixed","getZoom","addLayer","addControl"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport {MapboxLayer} from '@deck.gl/mapbox'\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\nimport {Tiles3DLoader} from '@loaders.gl/3d-tiles';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaW4ydHdhbiIsImEiOiJja3l6bjJ0ZWIwY2d0Mm5yemZ3NWFmOWhjIn0._B39LsH99PmOk74938_tUg'\nconst tileChiyoda = 'https://s3-ap-northeast-1.amazonaws.com/3dimension.jp/13000_tokyo-egm96/13101_chiyoda-ku_notexture/tileset.json';\n\nexport default function App() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lat, setLat] = useState(35.68836671417561);\n  const [lng, setLng] = useState(139.75643914212702);\n  const [zoom, setZoom] = useState(14);\n\n  const tile3dLayer = new MapboxLayer({\n    id: 'tile3dlayer',\n    type: Tile3DLayer,\n    pointSize: 1,\n    data: tileChiyoda,\n    opacity: 0.9,\n    pickable: true,\n    loader: Tiles3DLoader,\n    onTileLoad: (tileHeader) => tileHeader.content.cartographicOrigin.z -= 40,\n    onHover: (Tile3DLayer, event) => console.log('Hovered:', Tile3DLayer, event)\n  });\n\n  const nav = new mapboxgl.NavigationControl();\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/in2twan/ckyzn794b000t14s81978v83n',\n      center: [lng, lat],\n      zoom: zoom,\n    });\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  useEffect(() => {\n    map.current.on('load', () => {\n      map.current.addLayer(tile3dLayer);\n      map.current.addControl(nav, 'bottom-right');\n    });\n  });\n\n  return (\n    <div>\n      <div className=\"sidebar\">\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n      </div>\n      <div ref={mapContainer} className=\"map-container\"/>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}