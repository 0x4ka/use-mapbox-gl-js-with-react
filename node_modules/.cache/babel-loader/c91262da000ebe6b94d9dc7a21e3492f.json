{"ast":null,"code":"var _jsxFileName = \"/Users/in2/Documents/GitHub/use-mapbox-gl-js-with-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { MapboxLayer } from '@deck.gl/mapbox';\nimport { Tile3DLayer } from '@deck.gl/geo-layers';\nimport { Tiles3DLoader } from '@loaders.gl/3d-tiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaW4ydHdhbiIsImEiOiJja3l6bjJ0ZWIwY2d0Mm5yemZ3NWFmOWhjIn0._B39LsH99PmOk74938_tUg';\nconst tileChiyoda = 'https://s3-ap-northeast-1.amazonaws.com/3dimension.jp/13000_tokyo-egm96/13101_chiyoda-ku_notexture/tileset.json';\nexport default function App() {\n  _s();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lat, setLat] = useState(35.68836671417561);\n  const [lng, setLng] = useState(139.75643914212702);\n  const [zoom, setZoom] = useState(14);\n  const tile3dLayer = new MapboxLayer({\n    id: 'tile3dlayer',\n    type: Tile3DLayer,\n    pointSize: 1,\n    data: tileChiyoda,\n    opacity: 0.9,\n    pickable: true,\n    loader: Tiles3DLoader,\n    onTileLoad: tileHeader => {\n      tileHeader.content.cartographicOrigin.z -= 40;\n    }\n  });\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/in2twan/ckyzn794b000t14s81978v83n',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.on('click', e => {\n      console.log(\"clicked\");\n    });\n  });\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  useEffect(() => {\n    map.current.on('click', e => {\n      console.log(\"clicked\");\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wdUftn2iR++IwErK10VqRD0gxmY=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/in2/Documents/GitHub/use-mapbox-gl-js-with-react/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","MapboxLayer","Tile3DLayer","Tiles3DLoader","accessToken","tileChiyoda","App","mapContainer","map","lat","setLat","lng","setLng","zoom","setZoom","tile3dLayer","id","type","pointSize","data","opacity","pickable","loader","onTileLoad","tileHeader","content","cartographicOrigin","z","current","Map","container","style","center","on","e","console","log","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport {MapboxLayer} from '@deck.gl/mapbox'\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\nimport {Tiles3DLoader} from '@loaders.gl/3d-tiles';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaW4ydHdhbiIsImEiOiJja3l6bjJ0ZWIwY2d0Mm5yemZ3NWFmOWhjIn0._B39LsH99PmOk74938_tUg'\nconst tileChiyoda = 'https://s3-ap-northeast-1.amazonaws.com/3dimension.jp/13000_tokyo-egm96/13101_chiyoda-ku_notexture/tileset.json';\n\nexport default function App() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lat, setLat] = useState(35.68836671417561);\n  const [lng, setLng] = useState(139.75643914212702);\n  const [zoom, setZoom] = useState(14);\n\n  const tile3dLayer = new MapboxLayer({\n    id: 'tile3dlayer',\n    type: Tile3DLayer,\n    pointSize: 1,\n    data: tileChiyoda,\n    opacity: 0.9,\n    pickable: true,\n    loader: Tiles3DLoader,\n    onTileLoad: (tileHeader) => {\n      tileHeader.content.cartographicOrigin.z -= 40\n    },\n  });\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/in2twan/ckyzn794b000t14s81978v83n',\n      center: [lng, lat],\n      zoom: zoom,\n    });\n    map.current.on('click', (e) => {\n      console.log(\"clicked\");\n    });\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  useEffect(() => {\n    map.current.on('click', (e) => {\n      console.log(\"clicked\");\n    });\n  });\n\n  return (\n    <div>\n      <div className=\"sidebar\">\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n      </div>\n      <div ref={mapContainer} className=\"map-container\"/>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}