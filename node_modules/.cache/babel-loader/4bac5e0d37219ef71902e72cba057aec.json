{"ast":null,"code":"var _jsxFileName = \"/Users/in2/Documents/GitHub/use-mapbox-gl-js-with-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { MapboxLayer } from '@deck.gl/mapbox';\nimport { Tile3DLayer } from '@deck.gl/geo-layers';\nimport { Tiles3DLoader } from '@loaders.gl/3d-tiles';\nimport { AmbientLight, PointLight, DirectionalLight, LightingEffect } from '@deck.gl/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaW4ydHdhbiIsImEiOiJja3l6bjJ0ZWIwY2d0Mm5yemZ3NWFmOWhjIn0._B39LsH99PmOk74938_tUg';\nconst tileChiyoda = 'https://s3-ap-northeast-1.amazonaws.com/3dimension.jp/13000_tokyo-egm96/13101_chiyoda-ku_notexture/tileset.json';\nexport default function App() {\n  _s();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lat, setLat] = useState(35.68836671417561);\n  const [lng, setLng] = useState(139.75643914212702);\n  const [zoom, setZoom] = useState(14);\n  const ambientLight = new AmbientLight({\n    color: [255, 0, 0],\n    intensity: 1.0\n  });\n  const directionalLight = new DirectionalLight({\n    color,\n    intensity,\n    direction\n  });\n  const lightingEffect = new LightingEffect({\n    ambientLight,\n    directionalLight\n  });\n  const materials = {\n    ambient: 1.0,\n    diffuse: 1.0,\n    shininess: 100,\n    specularColor: [255, 0, 0]\n  };\n  const tile3dLayer = new MapboxLayer({\n    id: 'tile3dlayer',\n    type: Tile3DLayer,\n    pointSize: 1,\n    data: tileChiyoda,\n    opacity: 0.8,\n    loader: Tiles3DLoader,\n    onTileLoad: tileHeader => {\n      tileHeader.content.cartographicOrigin.z -= 40;\n    }\n  });\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/in2twan/ckyzn794b000t14s81978v83n',\n      center: [lng, lat],\n      zoom: zoom\n    });\n  });\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  useEffect(() => {\n    map.current.on('load', () => {\n      map.current.addLayer(tile3dLayer);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      material: materials,\n      effects: lightingEffect,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wdUftn2iR++IwErK10VqRD0gxmY=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/in2/Documents/GitHub/use-mapbox-gl-js-with-react/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","MapboxLayer","Tile3DLayer","Tiles3DLoader","AmbientLight","PointLight","DirectionalLight","LightingEffect","accessToken","tileChiyoda","App","mapContainer","map","lat","setLat","lng","setLng","zoom","setZoom","ambientLight","color","intensity","directionalLight","direction","lightingEffect","materials","ambient","diffuse","shininess","specularColor","tile3dLayer","id","type","pointSize","data","opacity","loader","onTileLoad","tileHeader","content","cartographicOrigin","z","current","Map","container","style","center","on","getCenter","toFixed","getZoom","addLayer"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport {MapboxLayer} from '@deck.gl/mapbox'\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\nimport {Tiles3DLoader} from '@loaders.gl/3d-tiles';\nimport {AmbientLight, PointLight, DirectionalLight, LightingEffect} from '@deck.gl/core';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaW4ydHdhbiIsImEiOiJja3l6bjJ0ZWIwY2d0Mm5yemZ3NWFmOWhjIn0._B39LsH99PmOk74938_tUg'\nconst tileChiyoda = 'https://s3-ap-northeast-1.amazonaws.com/3dimension.jp/13000_tokyo-egm96/13101_chiyoda-ku_notexture/tileset.json';\n\nexport default function App() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lat, setLat] = useState(35.68836671417561);\n  const [lng, setLng] = useState(139.75643914212702);\n  const [zoom, setZoom] = useState(14);\n  \n  const ambientLight = new AmbientLight({color: [255, 0, 0], intensity: 1.0});\n\n  const directionalLight = new DirectionalLight({color, intensity, direction});\n\n  const lightingEffect = new LightingEffect({ambientLight, directionalLight});\n  \n  const materials = {\n    ambient: 1.0,\n    diffuse: 1.0,\n    shininess: 100,\n    specularColor: [255, 0, 0]\n  }\n\n  const tile3dLayer = new MapboxLayer({\n    id: 'tile3dlayer',\n    type: Tile3DLayer,\n    pointSize: 1,\n    data: tileChiyoda,\n    opacity: 0.8,\n    loader: Tiles3DLoader,\n    onTileLoad: (tileHeader) => {\n      tileHeader.content.cartographicOrigin.z -= 40\n    },\n  });\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n    container: mapContainer.current,\n    style: 'mapbox://styles/in2twan/ckyzn794b000t14s81978v83n',\n    center: [lng, lat],\n    zoom: zoom\n    });\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  useEffect(() => {\n    map.current.on('load', () => {\n      map.current.addLayer(tile3dLayer);\n    });\n  });\n\n  return (\n    <div>\n      <div className=\"sidebar\">\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n    </div>\n    <div \n      ref={mapContainer}\n      material={materials}\n      effects={lightingEffect}\n      className=\"map-container\"\n    />\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}